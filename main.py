import logging
import fastapi
import uvicorn
import telebot
import random
from telebot import types
import os

API_TOKEN = os.environ.get('API_TOKEN')

helloText = """–ö–ê–ö –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨ –í–û–ü–†–û–°–´:

üîπ –î–∞–Ω–Ω—ã–π –±–æ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç 122 –≤–æ–ø—Ä–æ—Å–∞. –ù–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "üëã –ü–æ–ª—É—á–∏—Ç—å –≤–æ–ø—Ä–æ—Å"

üîπ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç–µ –≤–∞—à–µ–º—É —Ä–µ–±—ë–Ω–∫—É –ø–æ–∏–≥—Ä–∞—Ç—å —Å –≤–∞–º–∏ –≤ –∏–≥—Ä—É "–û—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å". –í—ã –ø–æ –æ—á–µ—Ä–µ–¥–∏ –≤—ã–±–∏—Ä–∞–µ—Ç–µ –≤–æ–ø—Ä–æ—Å –∏ –¥–∞—ë—Ç–µ –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Ç–æ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π. –ù–∏–∫–∞–∫–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è.

üîπ –î–∞–Ω–Ω—ã–º –±–æ—Ç–æ–º –º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –¥–æ—Ä–æ–≥–µ –∏–ª–∏ –ø—Ä–∏ –æ–∂–∏–¥–∞–Ω–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏, —á—Ç–æ–±—ã –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å —Ä–µ–±—ë–Ω–∫–æ–º –∏ –≤–µ—Å–µ–ª–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è. –ò–ª–∏ –¥–æ–≥–æ–≤–æ—Ä–∏—Ç–µ—Å—å –æ—Ç–≤–µ—á–∞—Ç—å –ø–æ –æ–¥–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É  –ø–µ—Ä–µ–¥ —É–∂–∏–Ω–æ–º, –∫–æ–≥–¥–∞ –≤—Å—è —Å–µ–º—å—è —Å–∞–¥–∏—Ç—Å—è –∫—É—à–∞—Ç—å. –ò–ª–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å —É—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ —Å–µ–º–µ–π–Ω—É—é –≤—Å—Ç—Ä–µ—á—É –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö —Å –¥–µ—Å–µ—Ä—Ç–æ–º, —Ñ–∏–ª—å–º–æ–º –∏ –ø–æ—Ç–æ–º –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã. –õ—é–±–æ–µ –≤—Ä–µ–º—è –∏ –ª—é–±–∞—è —Ñ–æ—Ä–º–∞ –æ–±—â–µ–Ω–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —ç—Ç–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –±—É–¥—É—Ç –ø–æ–ª–µ–∑–Ω—ã.

üîπ –ù–µ –¥–∞–≤–∏—Ç–µ –Ω–∞ —Ä–µ–±—ë–Ω–∫–∞ –∫–æ–≥–¥–∞ –æ–Ω –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã. –ù–µ –∂–¥–∏—Ç–µ –∫–∞–∫–∏—Ö-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ —É–º–Ω—ã—Ö –∏–ª–∏ —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤. –†–∞–¥—É–π—Ç–µ—Å—å –≤—Å–µ–º—É —á—Ç–æ —Ä–µ–±—ë–Ω–æ–∫ —Ä–µ—à–∞–µ—Ç –≤–∞–º —Å–æ–æ–±—â–∏—Ç—å –æ—Ç–≤–µ—á–∞—è –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã. –§–æ–∫—É—Å–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Ç–æ–º –∫–∞–∫ –≤—ã –æ—Ç–≤–µ—á–∞–µ—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ø–∞–¥–∞—é—Ç –≤–∞–º. –û—á–µ–Ω—å –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã –≤ —ç—Ç–æ–º –æ–±—â–µ–Ω–∏–∏ –Ω–µ –±—ã–ª–æ –¥–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ –æ—Å–æ–±—ã—Ö –æ–∂–∏–¥–∞–Ω–∏–π –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞. –ß—Ç–æ–±—ã —ç—Ç–æ –≤—Ä–µ–º—è –±—ã–ª–æ –ø—Ä–æ—Å—Ç–æ —Å–ø–æ–∫–æ–π–Ω—ã–º –∏ –ø—Ä–∏—è—Ç–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º –≤–º–µ—Å—Ç–µ —Å —Ä–µ–±—ë–Ω–∫–æ–º.

üîπ –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç, –ª–∏–±–æ –∫–∞–∂–¥—ã–π –≤—ã–±–∏—Ä–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã –ø–æ –æ—á–µ—Ä–µ–¥–∏ –∏ –æ—Ç–≤–µ—á–∞—é—Ç –∫–∞–∂–¥—ã–π –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å. –õ–∏–±–æ –ø–æ–¥—Ä–æ—Å—Ç–æ–∫ –≤—ã–±–∏—Ä–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –≤ –±–æ—Ç–µ –∏ –ø–æ—Ç–æ–º –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –æ—Ç–≤–µ—á–∞—é—Ç –Ω–∞ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –≤–æ–ø—Ä–æ—Å. –õ–∏–±–æ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –≤–∞–º –≤–∞—à —Ä–µ–±—ë–Ω–æ–∫.

üîπ –ó–∞—Ä–∞–Ω–µ–µ –¥–æ–≥–æ–≤–æ—Ä–∏—Ç–µ—Å—å —Å–æ –≤—Å–µ–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –∏–≥—Ä—ã –æ —Ç–æ–º, —á—Ç–æ —Ç–æ, —á—Ç–æ –≤—ã —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥—É –æ—Ç–≤–µ—á–∞—è –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ—Å—Ç–∞–Ω–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –º–µ–∂–¥—É –≤–∞–º–∏.
–ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–π—Ç–µ —á—Ç–æ –≤–∞—à–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã —Å—Ç—Ä–æ–≥–æ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã. –¢–æ–≥–¥–∞ –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –±—É–¥—É—Ç —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –±–æ–ª–µ–µ —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–Ω–æ."""

howPlay = '‚ú®–ö–∞–∫ –∏–≥—Ä–∞—Ç—å?'
getQuestion = 'üëã –ü–æ–ª—É—á–∏—Ç—å –≤–æ–ø—Ä–æ—Å'


WEBHOOK_HOST = os.environ.get('WEBHOOK_HOST')
WEBHOOK_PORT = 443  # 443, 80, 88 or 8443 (port need to be 'open')
WEBHOOK_LISTEN = '0.0.0.0'  # In some VPS you may need to put here the IP addr


# Quick'n'dirty SSL certificate generation:
#
# openssl genrsa -out webhook_pkey.pem 2048
# openssl req -new -x509 -days 3650 -key webhook_pkey.pem -out webhook_cert.pem
#
# When asked for "Common Name (e.g. server FQDN or YOUR name)" you should reply
# with the same value in you put in WEBHOOK_HOST

WEBHOOK_URL_BASE = "https://{}:{}".format(WEBHOOK_HOST, WEBHOOK_PORT)
WEBHOOK_URL_PATH = "/{}/".format(API_TOKEN)

def read_file(path):
    fo = open(path, 'r')
    text = fo.read()
    fo.close()
    return text.splitlines()


logger = telebot.logger
telebot.logger.setLevel(logging.INFO)

bot = telebot.TeleBot(API_TOKEN, threaded=False)
app = fastapi.FastAPI(docs=None, redoc_url=None)

path = "./resources/data.txt"
questions = read_file(path)
maxLength = len(questions)

@app.get("/hello")
def hello_page():
    return {"message": "_Hello_"}


@app.post(f'/{API_TOKEN}/')
def process_webhook(update: dict):
    """
    Process webhook calls
    """
    if update:
        update = telebot.types.Update.de_json(update)
        bot.process_new_updates([update])
    else:
        return


@bot.message_handler(commands=['help', 'start'])
def send_welcome(message):
    """
    Handle '/start' and '/help'
    """
    # bot.reply_to(message, ("Hi there, I am EchoBot.\n" "I am here to echo your kind words back to you."))

    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton(howPlay)
    btn2 = types.KeyboardButton(getQuestion)
    keyboard.add(btn1, btn2)
    bot.send_message(message.from_user.id, helloText, reply_markup=keyboard)


@bot.message_handler(func=lambda message: True, content_types=['text'])
def get_questions(message):
    """
    Handle all other messages
    """
    # bot.reply_to(message, message.text)
    if message.text == getQuestion:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True) #—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
        btn1 = types.KeyboardButton(howPlay)
        btn2 = types.KeyboardButton(getQuestion)

        index = random.randint(0, maxLength-1)

        keyboard.add(btn1, btn2)
        bot.send_message(message.from_user.id, questions[index], reply_markup=keyboard) #–æ—Ç–≤–µ—Ç –±–æ—Ç–∞
    elif message.text == howPlay:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True) #—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
        btn1 = types.KeyboardButton(howPlay)
        btn2 = types.KeyboardButton(getQuestion)

        keyboard.add(btn1, btn2)
        bot.send_message(message.from_user.id, helloText, reply_markup=keyboard) #–æ—Ç–≤–µ—Ç –±–æ—Ç–∞

# Remove webhook, it fails sometimes the set if there is a previous webhook
bot.remove_webhook()

print('set_webhook = ', WEBHOOK_URL_BASE, WEBHOOK_URL_PATH)

# Set webhook
bot.set_webhook(
    url=WEBHOOK_URL_BASE + WEBHOOK_URL_PATH
    #,certificate=open(WEBHOOK_SSL_CERT, 'r')
)


uvicorn.run(
    app,
    host=WEBHOOK_LISTEN,
    port=WEBHOOK_PORT
    #,
    #ssl_certfile=WEBHOOK_SSL_CERT,
    #ssl_keyfile=WEBHOOK_SSL_PRIV
)
